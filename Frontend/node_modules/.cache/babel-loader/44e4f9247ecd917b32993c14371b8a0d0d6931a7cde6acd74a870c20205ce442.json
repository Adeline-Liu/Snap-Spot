{"ast":null,"code":"var _jsxFileName = \"/Users/adelineliu/Desktop/Projects/snap-spot/src/shared/components/FormElements/Input.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\n// userReducer is used when there're complicate states or inter-connected states\n\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        // copy the old object into the new one\n        value: action.value,\n        isValid: true\n      };\n    default:\n      return state;\n  }\n};\nconst Input = props => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value\n    });\n  };\n  const element = props.element === \"input\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && \"form-control--invalid\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), element, !inputState.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"U01HtyXTTXD1JC0a0ik45i8kVeM=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","inputReducer","state","action","type","value","isValid","Input","props","_s","inputState","dispatch","changeHandler","event","val","target","element","id","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","children","htmlFor","label","errorText","_c","$RefreshReg$"],"sources":["/Users/adelineliu/Desktop/Projects/snap-spot/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer } from \"react\";\n// userReducer is used when there're complicate states or inter-connected states\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state, // copy the old object into the new one\n        value: action.value,\n        isValid: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const changeHandler = (event) => {\n    dispatch({ type: \"CHANGE\", val: event.target.value });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC;;AAEA,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,QAAQ;MACX,OAAO;QACL,GAAGF,KAAK;QAAE;QACVG,KAAK,EAAEF,MAAM,CAACE,KAAK;QACnBC,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,MAAMK,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAACG,YAAY,EAAE;IACtDI,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMM,aAAa,GAAIC,KAAK,IAAK;IAC/BF,QAAQ,CAAC;MAAEP,IAAI,EAAE,QAAQ;MAAEU,GAAG,EAAED,KAAK,CAACE,MAAM,CAACV;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMW,OAAO,GACXR,KAAK,CAACQ,OAAO,KAAK,OAAO,gBACvBhB,OAAA;IACEiB,EAAE,EAAET,KAAK,CAACS,EAAG;IACbb,IAAI,EAAEI,KAAK,CAACJ,IAAK;IACjBc,WAAW,EAAEV,KAAK,CAACU,WAAY;IAC/BC,QAAQ,EAAEP,aAAc;IACxBP,KAAK,EAAEK,UAAU,CAACL;EAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC,gBAEFvB,OAAA;IACEiB,EAAE,EAAET,KAAK,CAACS,EAAG;IACbO,IAAI,EAAEhB,KAAK,CAACgB,IAAI,IAAI,CAAE;IACtBL,QAAQ,EAAEP,aAAc;IACxBP,KAAK,EAAEK,UAAU,CAACL;EAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CACF;EAEH,oBACEvB,OAAA;IACEyB,SAAS,EAAG,gBACV,CAACf,UAAU,CAACJ,OAAO,IAAI,uBACxB,EAAE;IAAAoB,QAAA,gBAEH1B,OAAA;MAAO2B,OAAO,EAAEnB,KAAK,CAACS,EAAG;MAAAS,QAAA,EAAElB,KAAK,CAACoB;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9CP,OAAO,EACP,CAACN,UAAU,CAACJ,OAAO,iBAAIN,OAAA;MAAA0B,QAAA,EAAIlB,KAAK,CAACqB;IAAS;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACd,EAAA,CAvCIF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}